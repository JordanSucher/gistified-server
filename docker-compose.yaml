services:
    ### PostgreSQL Database (Stores Airflow metadata + App Data) ###
    postgres:
        image: postgres:17
        container_name: postgres
        restart: always
        environment:
        - POSTGRES_USER=postgres_admin
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - AIRFLOW_DB_PASSWORD=${AIRFLOW_DB_PASSWORD}
        - APP_DB_PASSWORD=${APP_DB_PASSWORD}
        ports:
          - "5431:5432"
        volumes:
          - ./database/postgres_data:/var/lib/postgresql/data
          - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql  # Use SQL instead of Bash

    ### Airflow Webserver (UI for DAG management) ###
    airflow-webserver:
        build: ./airflow
        container_name: airflow_webserver
        restart: always
        depends_on:
        - postgres
        env_file:
            - ./.env
        environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres/airflow_db
        - AIRFLOW_CONN_APP_DB=postgresql://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres:5431/app_db
        - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=UTC
        - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth
        volumes:
        - ./airflow/tests:/opt/airflow/tests
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/utils:/opt/airflow/utils
        - ./airflow/logs:/opt/airflow/logs
        - ./airflow/config:/opt/airflow/config
        - ./airflow/data:/opt/airflow/data  # Mounted transcript and audio storage
        - ./airflow/requirements.txt:/requirements.txt  # Install Airflow dependencies
        ports:
        - "8080:8080"
        command: ["airflow", "webserver"]

    ### Airflow Scheduler (Executes DAGs) ###
    airflow-scheduler:
        build: ./airflow
        container_name: airflow_scheduler
        restart: always
        depends_on:
        - postgres
        env_file:
            - ./.env
        environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres/airflow_db
        - AIRFLOW_CONN_APP_DB=postgresql://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres:5431/app_db
        - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth
        volumes:
        - ./airflow/tests:/opt/airflow/tests
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/utils:/opt/airflow/utils
        - ./airflow/logs:/opt/airflow/logs
        - ./airflow/config:/opt/airflow/config
        - ./airflow/data:/opt/airflow/data  # Mounted transcript and audio storage
        - ./airflow/requirements.txt:/requirements.txt  # Install Airflow dependencies
        command: ["airflow", "scheduler"]

    ### Airflow Init (Bootstraps the environment) ###
    airflow-init:
        image: apache/airflow:2.6.3
        container_name: airflow_init
        depends_on:
        - postgres
        env_file:
            - ./.env
        environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres/airflow_db
        - AIRFLOW_CONN_APP_DB=postgresql://airflow_user:${AIRFLOW_DB_PASSWORD}@postgres:5431/app_db
        - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth
        entrypoint: ["airflow", "db", "init"]

